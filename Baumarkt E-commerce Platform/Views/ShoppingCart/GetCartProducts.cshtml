@*@using BaumarktSystem.Data.Models
@using System.Globalization
@model List<Product>

<h2 class="card-text mb-3">YOUR SHOPPING CART</h2>

@if (Model != null && Model.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Short Description</th>
                <th>Quantity</th>
                <th>Image</th>
                <th></th>

            </tr>
        </thead>
        <tbody>


            @for (int i = 0; i < Model.Count(); i++)
            {
                <input type="hidden" asp-for="@Model[i].FullName" />
                <input type="hidden" asp-for="@Model[i].Id" />



                <tr>
                    <td>@Model[i].FullName</td>
                    <td>@Model[i].Price.ToString("C", new CultureInfo("eu-EU"))</td>
                    <td>@Model[i].ShortProductDescription</td>
                    <td>1</td>
                    <td><img src="@Model[i].ImageUrl" width="100" /></td>

                    <td>
                        <a href="#" class="btn btn-danger btn-sm" onclick="deleteProduct('@Model[i].Id')">
                            <i class="fas fa-trash-alt"></i> Delete
                        </a>
                    </td>
                </tr>



            }


        </tbody>
    </table>

    <p>Total Price: @Model.Sum(p => p.Price).ToString("C", new CultureInfo("eu-EU"))</p>

    <button class="btn btn-primary" onclick="checkout()">Checkout</button>
    <a href="@Url.Action("Index", "Home", new { area = "" })" class="btn btn-secondary">Continue Shopping</a>
}
else
{
    <p>Your cart is empty.</p>
    <a href="@Url.Action("Index", "Home", new { area = "" })" class="btn btn-primary">Continue Shopping</a>
}

<script>
    function deleteProduct(productId) {
        // Create a hidden form and add the product ID as a parameter
        var form = document.createElement('form');
        form.method = 'post';
        form.action = '@Url.Action("RemoveCartProducts", "ShoppingCart")';

        var input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'id';
        input.value = productId;

        form.appendChild(input);
        document.body.appendChild(form);

        // Submit the form
        form.submit();
    }

    function checkout() {

        alert("Proceeding to checkout...");
        window.location.href = '@Url.Action("ShoppingCartSummary", "ShoppingCart", new { area = "" })';
    }
</script>*@

@*@using BaumarktSystem.Data.Models
@using System.Globalization
@using BaumarktSystem.Common
@model List<Product>

<h2>Your Shopping Cart</h2>

@if (Model != null && Model.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Image</th>
                <th>Price per Item</th>
                <th>Description</th>
                <th>Quantity</th>
                <th>Total Price</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Count; i++)
            {
                <tr>
                    <td>@Model[i].FullName</td>
                    <td><img src="@Model[i].ImageUrl" width="100" /></td>
                    <td>@Model[i].Price.ToString("C", new CultureInfo("eu-EU"))</td>
                    <td>@Model[i].Description</td>
                    @*<td>
                        <input type="number" class="form-control quantity-input"  value="@Model[i].TempQuantity"  min="1" onchange="updateTotalPrice(this, @i)" data-index="@i" data-price="@Model[i].Price" />
                    </td>
                    <td class="total-price" data-index="@i">@Model[i].Price * @Model[i].TempQuantity</td>
                    <td>
                        <a href="#" class="btn btn-danger btn-sm" onclick="deleteProduct('@Model[i].Id')">
                            <i class="fas fa-trash-alt"></i> Delete
                        </a>
                    </td>*@

                   @* <td>
                        <input type="number" class="form-control quantity-input" value="@Model[i].TempQuantity" min="1" onchange="updateTotalPrice(this, @i)" data-index="@i" data-price="@Model[i].Price" />
                    </td>
                    <td class="total-price" data-index="@i">@Model[i].Price * @Model[i].TempQuantity</td>
                    <td>
                        <a href="#" class="btn btn-danger btn-sm" onclick="deleteProduct('@Model[i].Id')">
                            <i class="fas fa-trash-alt"></i> Delete
                        </a>
                    </td>
                    <td>
                        <button class="btn btn-info btn-sm" onclick="updateCart(@Model[i].Id, @Model[i].TempQuantity)">Update Cart</button>
                    </td>


                </tr>
            }

          


        </tbody>
    </table>

    <p>Total Order Price: <span id="order-total">@Model.Sum(p => p.Price * p.TempQuantity).ToString("C", new CultureInfo("eu-EU"))</span></p>

    <button class="btn btn-primary" onclick="checkout()">Checkout</button>
    <a href="@Url.Action("Index", "Home", new { area = "" })" class="btn btn-secondary">Continue Shopping</a>
}
else
{
    <p>Your cart is empty.</p>
    <a href="@Url.Action("Index", "Home", new { area = "" })" class="btn btn-primary">Continue Shopping</a>
}

<script>
    // On page load, hook quantity change events
    document.addEventListener("DOMContentLoaded", function () {
        var quantityInputs = document.querySelectorAll(".quantity-input");
        quantityInputs.forEach(function (input) {
            input.addEventListener("change", updateTotalPrice);
        });
    });

    function updateTotalPrice(input, index) {
        var totalPriceElement = document.querySelector(".total-price[data-index='" + index + "']");
        var pricePerItem = parseFloat(input.getAttribute("data-price"));
        var quantity = parseInt(input.value);
        var total = pricePerItem * quantity;
        totalPriceElement.innerText = total.toLocaleString("eu-EU", { style: "currency", currency: "EUR" });

        // Update the total cost
        var orderTotal = 0;
        var totalElements = document.querySelectorAll(".total-price");
        totalElements.forEach(function (element) {
            orderTotal += parseFloat(element.innerText);
        });
        var orderTotalElement = document.getElementById("order-total");
        orderTotalElement.innerText = orderTotal.toLocaleString("eu-EU", { style: "currency", currency: "EUR" });
    }

    function deleteProduct(productId) {
        // Create a hidden form and add the product ID as a parameter
        var form = document.createElement('form');
        form.method = 'post';
        form.action = '@Url.Action("RemoveCartProducts", "ShoppingCart")';

        var input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'id';
        input.value = productId;

        form.appendChild(input);
        document.body.appendChild(form);

        // Submit the form
        form.submit();
    }

    function updateCart(productId, newQuantity) {
        fetch('@Url.Action("UpdateCart", "ShoppingCart")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                productId: productId,
                quantity: newQuantity,
            }),
        })
            .then(response => response.json())
            .then(data => {
                // Обновете визуално количката на потребителя
                alert(data.message); // Покажете съобщение за успешно обновление
                window.location.reload(); // Презаредете страницата или изпълнете други действия според вашите нужди
            })
            .catch(error => {
                console.error('Грешка при актуализиране на количката:', error);
            });
    }


    function checkout() {

        alert("Proceeding to checkout...");
        window.location.href = '@Url.Action("ShoppingCartSummary", "ShoppingCart", new { area = "" })';
    }
</script>*@

@using BaumarktSystem.Data.Models
@using System.Globalization
@using BaumarktSystem.Common
@model List<Product>

<h2>Your Shopping Cart</h2>

@if (Model != null && Model.Count > 0)
{
    <form method="post" asp-action="UpdateCart" asp-controller="ShoppingCart">
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Image</th>
                    <th>Price per Item</th>
                    <th>Description</th>
                    <th>Quantity</th>
                    <th>Total Price</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count; i++)
                {
                    <input type="hidden" asp-for="@Model[i].FullName" />
                    <input type="hidden" asp-for="@Model[i].Id" />
                    <tr>
                        <td>@Model[i].FullName</td>
                        <td><img src="@Model[i].ImageUrl" alt="Product Image" width="100" /></td>
                        <td>@Model[i].Price.ToString("C", new CultureInfo("eu-EU"))</td>
                        <td>@Model[i].Description</td>
                        <td>
                            <label for="quantityInput_@i">Quantity:</label>
                            <input type="number" class="form-control" asp-for="@Model[i].TempQuantity" min="1" />
                            <input type="hidden" asp-for="@Model[i].Id" />
                        </td>
                        <td>@string.Format(new CultureInfo("eu-EU"), "{0:C}", (Model[i].Price * Model[i].TempQuantity))</td>

                        <td>
                            <button type="button" class="btn btn-danger btn-sm delete-product" data-product-id="@Model[i].Id">
                                <i class="fas fa-trash-alt"></i> Delete
                            </button>
                        </td>

                    </tr>
                }
            </tbody>
        </table>

        <p>Total Order Price: <span>@Model.Sum(p => p.Price * p.TempQuantity).ToString("C", new CultureInfo("eu-EU"))</span></p>

        <input type="hidden" name="additionalData" value="Тази стойност ще се върне в модела" />

        <div class="text-center">
            <button type="submit" class="btn btn-primary">Update Cart</button>           
            <a href="@Url.Action("Index", "Home", new { area = "" })" class="btn btn-secondary">Continue Shopping</a>
        </div>
    </form>
    <button class="btn btn-primary" onclick="checkout()">Checkout</button>
}
else
{
    <p>Your cart is empty.</p>
    <a href="@Url.Action("Index", "Home", new { area = "" })" class="btn btn-primary">Continue Shopping</a>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.delete-product').click(function () {
                var productId = $(this).data('product-id');
                $.ajax({
                    type: 'POST',
                    url: '/ShoppingCart/RemoveCartProducts', // Подменете с пътя към вашия контролер и действие
                    data: { id: productId },
                    success: function () {
                        // Обновете интерфейса или презаредете страницата, за да отразите промените
                        location.reload();
                    }
                });
            });
        });

        function checkout() {

            alert("Proceeding to checkout...");
            window.location.href = '@Url.Action("ShoppingCartSummary", "ShoppingCart", new { area = "" })';
        }

    </script>
}



